{"version":3,"sources":["images/program.jpg","components/Home.js","firebase.js","actions/index.js","components/UserStatus.js","components/Login.js","components/Menu.js","components/AddStudent.js","components/AddGroup.js","components/AddSchool.js","components/AdminAdd.js","components/Admin.js","components/Landing.js","components/TemesForKurs.js","components/Temes.js","components/AddTheme.js","App.js","reducers/isLogged.js","reducers/saveUserInStore.js","reducers/admin.js","reducers/saveStudentInfo.js","reducers/status.js","reducers/index.js","config/store.js","index.js"],"names":["module","exports","Home","isLogged","useSelector","state","user","saveStudentInfo","console","log","align","name","to","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","login","props","type","payload","saveStudentInfoInStore","userStatus","adminLogin","UserStatus","admin","myStatus","status","useState","setStatus","school","setSchool","group","setGroup","schools","setSchools","groups","setGroups","adminPassword","setAdminPassword","schoolPassword","setSchoolPassword","groupPassword","setGroupPassword","errorPass","setErrorPass","dispatch","useDispatch","schoolField","groupChuse","adminPassCheck","Form","Group","controlId","Control","as","onChange","e","target","value","map","item","idx","key","Label","placeholder","Button","variant","useEffect","collection","get","then","snapsot","allSchools","docs","doc","id","data","catch","err","where","allGroups","className","onSubmit","preventDefault","process","setTimeout","passed","password","Alert","Login","lastname","Menu","logged","saveUserInStore","statusLinks","setStatusLinks","Nav","Link","href","Navbar","collapseOnSelect","expand","bg","Brand","Toggle","aria-controls","Collapse","alt","src","photoUrl","width","height","onClick","auth","signOut","AddStudent","setName","phone","setPhone","myStyle","marginLeft","Accordion","index","Card","Header","eventKey","toString","Body","style","set","refresh","addStudnetToDb","kurs","setKurs","addGroupToDb","temes_pass","temes2_pass","groupsNames","push","indexOf","alert","schoolsNames","addSchoolToDb","AdminAdd","myStyle2","students","Admin","setStudents","reloadData","setReloadData","error","sort","a","b","toUpperCase","num","groupN","drawStudnets","studGroup","groupName","delete","delStudent","length","Table","striped","bordered","hover","student","Landing","animation","duration","program","TemesForKurs","defaultActiveKey","temes","tema","task","materials","video","Temes","allState","setTemes","temesJS","setTemesJS","alltemes","newTemes","slice","alltemesJS","Tabs","Tab","title","setNum","setTema","setVideo","tasks","setTasks","setMaterials","allNewTask","i","addTheme2ToDb","App","basename","path","component","exact","AddTheme","action","allReducers","combineReducers","persistedState","serializedState","localStorage","getItem","JSON","parse","loadFromLocalStorage","store","createStore","subscribe","stringify","setItem","saveToLocalStorage","getState","ReactDOM","render","Fragment","document","getElementById"],"mappings":"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","file":"static/js/main.28efe988.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/program.09ba2146.jpg\";","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nexport default function Home() {\r\n    const isLogged = useSelector(state => state.isLogged);\r\n    const user = useSelector(state => state.saveStudentInfo);\r\n    const state = useSelector(state => state)\r\n\r\n    if(!isLogged){ return <Redirect to='/login'/>}\r\n    return (\r\n        <div>\r\n            {console.log(state)}\r\n            {isLogged \r\n                ? \r\n                <>\r\n                    <h1 align='center'>Вітаю {user.name}!\r\n                        <br/><br/>\r\n                    </h1> \r\n\r\n                </>\r\n                : \r\n                <h1>not logged</h1>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import * as firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firebase-firestore';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBWYb2__HbYJqLIMRNlRD8BbbyQL6pKNJM\",\r\n    authDomain: \"study-link-v2.firebaseapp.com\",\r\n    databaseURL: \"https://study-link-v2.firebaseio.com\",\r\n    projectId: \"study-link-v2\",\r\n    storageBucket: \"study-link-v2.appspot.com\",\r\n    messagingSenderId: \"889070758962\",\r\n    appId: \"1:889070758962:web:9d675466120941c819a02b\",\r\n    measurementId: \"G-5EPFMVVYG4\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  const db = firebase.firestore();\r\n\r\n  export { firebase, db }","export const login = (props) => {\r\n    return {\r\n        type: \"SIGN_IN\",\r\n        payload: props\r\n    }\r\n}\r\n\r\nexport const saveUserInStore = (props) => {\r\n    return {\r\n        type: \"SAVE_USER_IN_STORE\",\r\n        payload: props\r\n    }\r\n}\r\n\r\nexport const saveStudentInfoInStore = (props) => {\r\n    return {\r\n        type: \"SAVE_STUDENT_INFO_IN_STORE\",\r\n        payload: props\r\n    }\r\n}\r\n\r\nexport const userStatus = (props) => {\r\n    return {\r\n        type: \"SET_USER_STATUS\",\r\n        payload: props\r\n    }\r\n}\r\n\r\nexport const adminLogin = (props) => {\r\n    return {\r\n        type: \"ADMIN_SIGN_IN\",\r\n        payload: props\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { Form, Button, Alert } from 'react-bootstrap';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { db } from '../firebase';\r\nimport { adminLogin, saveStudentInfoInStore, userStatus, login } from '../actions';\r\nimport '../styles/SignInToGroup.scss';\r\n\r\n\r\nexport default function UserStatus() {\r\n    const admin = useSelector(state => state.admin);\r\n    const myStatus = useSelector(state => state.status);\r\n\r\n    const [status, setStatus] = useState('Мій статус');\r\n    const [school, setSchool] = useState('');\r\n    const [group, setGroup] = useState('');\r\n    const [schools, setSchools] = useState([]);\r\n    const [groups, setGroups] = useState([]);\r\n    const [adminPassword, setAdminPassword] = useState('');\r\n    const [schoolPassword, setSchoolPassword] = useState('');\r\n    const [groupPassword, setGroupPassword] = useState('');\r\n    const [errorPass, setErrorPass] = useState(false);\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(status === 'Адміністратор'){\r\n            console.log(process.env.REACT_APP_ADMIN_PASS)\r\n            if(adminPassword === process.env.REACT_APP_ADMIN_PASS){\r\n                dispatch(login(true))\r\n                dispatch(adminLogin(true))\r\n                dispatch(userStatus('Admin'))\r\n                setAdminPassword('')\r\n            }else{\r\n                setErrorPass(true);\r\n                setTimeout(()=>setErrorPass(false),3000)\r\n            }\r\n        }\r\n        if(status === 'Учень'){\r\n            console.log('учень', school, group, groupPassword)\r\n            let passed = false;\r\n            db.collection('Students').where('group', '==', group)\r\n            .get()\r\n            .then( \r\n                snapsot => {\r\n                    const data = snapsot.docs.map(doc => ({\r\n                        id: doc.id,\r\n                        ...doc.data()\r\n                    }))\r\n                    data.map(user => {\r\n                        if(user.password === groupPassword){ \r\n                            dispatch(login(true))\r\n                            dispatch(saveStudentInfoInStore({status, ...user}))\r\n                            dispatch(userStatus('Student'))\r\n                            passed = true;\r\n                        }\r\n                        return true\r\n                    })\r\n                    if(!passed){ setErrorPass(true); console.log('show') }\r\n                        setTimeout(()=>{\r\n                            setErrorPass(false)\r\n                            console.log('hide')\r\n                        }, 3000);\r\n                }\r\n            )\r\n            .catch(err => console.log(err))\r\n        }\r\n        if(status === 'Вчитель'){\r\n            db.collection('Teachers').where('school', '==', school)\r\n            .get()\r\n            .then( \r\n                snapsot => {\r\n                    const data = snapsot.docs.map(doc => ({\r\n                        id: doc.id,\r\n                        ...doc.data()\r\n                    }))\r\n                    if(data[0].password === schoolPassword){ \r\n                        dispatch(login(true))\r\n                        dispatch(saveStudentInfoInStore({status, ...data[0]}))\r\n                        dispatch(userStatus('Teacher'))\r\n   \r\n                    }\r\n                }\r\n            )\r\n            .catch(err => console.log(err))\r\n        }\r\n    }\r\n    //fields components\r\n    let [ schoolField, groupChuse, faillogin, loginAndPass, adminPassCheck ] = [null, null, null, null, null];\r\n    if(status === 'Учень'){\r\n        schoolField = (\r\n            <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                <Form.Control as=\"select\" onChange={e => setSchool(e.target.value)}>\r\n                    <option>Мій заклад</option>\r\n                    {\r\n                        schools.map((item,idx) => \r\n                            <option key={idx}>{item.name}</option>\r\n                        )\r\n                    }\r\n                </Form.Control>\r\n            </Form.Group>\r\n        )\r\n        if(school){\r\n            groupChuse = (\r\n                <>\r\n                <Form.Group>\r\n                    <Form.Control as=\"select\" onChange={e => setGroup(e.target.value)}>\r\n                        <option>Моя група</option>\r\n                        {\r\n                            groups.map((item,idx) => \r\n                                <option key={idx}>{item.name}</option>\r\n                            )\r\n                        }\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                { group \r\n                    ? <>\r\n                        <Form.Group controlId=\"formBasicPassword\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control \r\n                                name=\"password\" \r\n                                type=\"password\" \r\n                                placeholder=\"School for password\" \r\n                                value={groupPassword}\r\n                                onChange={e => setGroupPassword(e.target.value)}\r\n                            />\r\n                        </Form.Group>\r\n                        <Button variant=\"primary\" type=\"submit\">\r\n                            Увійти\r\n                        </Button> \r\n                    </>\r\n                    : null\r\n                }\r\n                </>\r\n            )\r\n            \r\n        }\r\n        \r\n    }\r\n    if(status === 'Вчитель'){\r\n        schoolField = (\r\n            <>\r\n            <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                <Form.Control as=\"select\" onChange={e => setSchool(e.target.value)}>\r\n                    <option>Мій заклад</option>\r\n                    {\r\n                        schools.map((item,idx) => \r\n                            <option key={idx}>{item.name}</option>\r\n                        )\r\n                    }\r\n                </Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formBasicPassword\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control \r\n                    name=\"password\" \r\n                    type=\"password\" \r\n                    placeholder=\"School for password\" \r\n                    value={schoolPassword}\r\n                    onChange={e => setSchoolPassword(e.target.value)}\r\n                />\r\n            </Form.Group>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n                Увійти\r\n            </Button>\r\n            </>\r\n        )\r\n    }\r\n    if(status === 'Адміністратор'){\r\n        adminPassCheck = (\r\n            <>\r\n                <Form.Group controlId=\"formBasicPassword\">\r\n                    <Form.Label>Password for call center</Form.Label>\r\n                    <Form.Control \r\n                        name=\"password\" \r\n                        type=\"password\" \r\n                        placeholder=\"Admin password\" \r\n                        value={adminPassword}\r\n                        onChange={e => setAdminPassword(e.target.value)}\r\n                    />\r\n                </Form.Group>\r\n            \r\n                <Button variant=\"primary\" type=\"submit\">\r\n                    Увійти\r\n                </Button>\r\n            </>\r\n        )\r\n    }\r\n    useEffect(() => {\r\n        db.collection('Schools')\r\n        .get()\r\n        .then( \r\n            snapsot => {\r\n                const allSchools = snapsot.docs.map(doc => ({\r\n                    id: doc.id,\r\n                    ...doc.data()\r\n                }))\r\n                setSchools(allSchools)\r\n            }\r\n        )\r\n        .catch(err => console.log(err))\r\n\r\n        if(school){\r\n            console.log('done', school)\r\n            db.collection('Groups').where('school', '==', school)\r\n            .get()\r\n            .then( \r\n                snapsot => {\r\n                    const allGroups = snapsot.docs.map(doc => ({\r\n                        id: doc.id,\r\n                        ...doc.data()\r\n                    }))\r\n                    setGroups(allGroups)\r\n                }\r\n            )\r\n            .catch(err => console.log(err))\r\n        }\r\n    }, [admin, school])\r\n    if(myStatus !== 'Guest') return <Redirect to='#/home'/>\r\n    return (\r\n        <div className='form'>\r\n            <h1 align='center'>Підтвердіть свій статус щоб продовжити</h1>\r\n            <Form onSubmit={onSubmit}>\r\n                { \r\n                    errorPass \r\n                        ?  \r\n                        <Alert variant=\"danger\">\r\n                           Wrong password!\r\n                        </Alert> \r\n                        : ''\r\n                }\r\n                <Form.Group controlId=\"exampleForm.ControlSelect3\">\r\n                    <Form.Control as=\"select\" onChange={e => setStatus(e.target.value)}>\r\n                            <option>Мій статус</option>\r\n                            <option>Учень</option>\r\n                            <option>Вчитель</option>\r\n                            <option>Адміністратор</option>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                \r\n                {/*компонент для вибору закладу (школи)*/}\r\n                {schoolField}\r\n\r\n                {/*компонент для вибору групи у даному закладі (школі)*/}\r\n                {groupChuse}\r\n\r\n                {/*помилка при невірному введеню логіна чи пароля*/}\r\n                {faillogin}\r\n\r\n                {/*Admin перевірка паролю*/}\r\n                {adminPassCheck}\r\n\r\n                {/*логін і пароль відносно вибраного статусу*/}\r\n                {loginAndPass}\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport '../styles/Login.scss';\r\nimport UserStatus from './UserStatus';\r\n\r\n\r\n\r\n\r\nexport default function Login() {\r\n    const isLogged = useSelector(state => state.isLogged);\r\n    const user = useSelector(state => state.saveStudentInfo);\r\n    const state = useSelector(state => state)\r\n\r\n    \r\n \r\n    if(isLogged){return <Redirect to='#/home'/>}\r\n\r\n   \r\n    return (\r\n        <div>\r\n            {console.log(state)}\r\n            {!isLogged ? \r\n                <UserStatus />\r\n                : \r\n                <h1 align=\"center\">You already logged as {user.name} {user.lastname}</h1>}\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Nav, Navbar } from 'react-bootstrap';\r\nimport { firebase } from '../firebase';\r\nimport { login, saveUserInStore, adminLogin, userStatus, saveStudentInfoInStore } from '../actions'\r\n\r\nexport default function Menu() {\r\n    const logged = useSelector(state => state.isLogged);\r\n    const status = useSelector(state => state.status);\r\n    const user = useSelector(state => state.saveUserInStore);\r\n    const admin = useSelector(state => state.admin);\r\n\r\n    const [statusLinks, setStatusLinks] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const logOut = () => {\r\n        firebase.auth().signOut(); \r\n        dispatch(login(false))\r\n        dispatch(saveUserInStore({}))\r\n        dispatch(saveStudentInfoInStore({}))\r\n        dispatch(adminLogin(false))\r\n        dispatch(userStatus('Guest'))\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(status === 'Guest'){\r\n            setStatusLinks(\r\n                <Nav.Link href=\"#/UserStatus\">Підтвердити статус</Nav.Link>\r\n            )\r\n        }\r\n        if(status === 'Student'){\r\n            setStatusLinks(\r\n                <>\r\n                    <Nav.Link href=\"#/Temes\">Теми</Nav.Link>\r\n                    <Nav.Link href=\"#/Online\">Навчання онлайн</Nav.Link>\r\n                </>\r\n            )\r\n        }\r\n        if(status === 'Teacher'){\r\n            setStatusLinks(\r\n                <>\r\n                <Nav.Link href=\"#/Temes\">Теми</Nav.Link>\r\n                <Nav.Link href=\"#/HomeTeacher\">Мої групи</Nav.Link>\r\n                <Nav.Link href=\"#/TeacherGroups\">Додати/Видалити учня</Nav.Link>\r\n                </>\r\n            )\r\n       }\r\n       if(status === 'Admin'){\r\n        setStatusLinks(\r\n            <>\r\n                <Nav.Link href=\"#/Temes\">Теми</Nav.Link>\r\n                <Nav.Link href=\"#/Admin\">Додати школу/групу/учня</Nav.Link>\r\n                <Nav.Link href=\"#/AddTheme\">Додати тему</Nav.Link>\r\n            </>\r\n        )\r\n   }\r\n    },[status])\r\n    return (\r\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n                \r\n            <Navbar.Brand href=\"/\">StudyLink</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                    {logged \r\n                        ? \r\n                        <>\r\n                            <Nav.Link href=\"#/Home\">Головна</Nav.Link>\r\n                            {statusLinks}\r\n                        </>\r\n                        :\r\n                        null\r\n                    }\r\n                    </Nav>\r\n                    \r\n                    {logged \r\n                        ? \r\n                        <Nav>\r\n                            <Nav.Link>\r\n                                <img \r\n                                    alt='user' \r\n                                    src={user.photoUrl} \r\n                                    align='center' \r\n                                    width='30px' \r\n                                    height='30px'/> {user.name} {admin ? <b>admin</b> : null} \r\n                            </Nav.Link>\r\n                            <Nav.Link onClick={logOut}>Вийти</Nav.Link>\r\n                        </Nav>\r\n                        :\r\n                        <Nav>\r\n                            <Nav.Link href=\"#/Login\">Увійти</Nav.Link>\r\n                        </Nav>\r\n                    }\r\n                    \r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Accordion, Card, Form, Button } from 'react-bootstrap';\r\nimport { db } from '../firebase';\r\n\r\nexport default function AddStudent(props) {\r\n\r\n    const [name, setName] = useState('');\r\n    const [phone, setPhone] = useState('');\r\n\r\n\r\n    const myStyle = {\r\n        width: '50%',\r\n        marginLeft: '25%'\r\n    }\r\n    function addStudnetToDb(e, group){\r\n        e.preventDefault();\r\n        let data = {\r\n            group,\r\n            name,\r\n            phone,\r\n            password: phone\r\n        }\r\n        console.log(data)\r\n        db.collection(\"Students\").doc().set(data)\r\n        setName('');\r\n        setPhone('');\r\n        props.refresh()\r\n    }\r\n    return (\r\n        <div>\r\n            <Accordion>\r\n                {props.groups.map( (group, index) => \r\n                    <Card key={index}>\r\n                        <Accordion.Toggle as={Card.Header} eventKey={index.toString()}>\r\n                            {group.school} - {group.name}\r\n                        </Accordion.Toggle>\r\n\r\n                        <Accordion.Collapse eventKey={index.toString()}>\r\n                            <Card.Body>\r\n                                <Form style={myStyle}  onSubmit={e => addStudnetToDb(e, group.name)}>\r\n                                    <Form.Group controlId=\"formGroupNewStudentName\">\r\n                                        <Form.Label>Ім'я Прізвище</Form.Label>\r\n                                        <Form.Control \r\n                                            type=\"text\" \r\n                                            placeholder=\"Ім'я і прізвище\" \r\n                                            value={name}\r\n                                            onChange={e => setName(e.target.value)}/>\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"formGroupNewStudentPhone\">\r\n                                        <Form.Label>телефон учня/батьків (пароль)</Form.Label>\r\n                                        <Form.Control \r\n                                            type=\"text\" \r\n                                            placeholder=\"Телефон\" \r\n                                            value={phone}\r\n                                            onChange={e => setPhone(e.target.value)}/>\r\n                                    </Form.Group>\r\n                                    <Button variant=\"primary\" type=\"submit\">\r\n                                        Додати\r\n                                    </Button>\r\n                                </Form>\r\n                            </Card.Body>\r\n                        </Accordion.Collapse>\r\n                    </Card>\r\n                )}\r\n                \r\n            </Accordion>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Accordion, Card, Form, Button } from 'react-bootstrap';\r\nimport { db } from '../firebase';\r\n\r\nexport default function AddStudent(props) {\r\n\r\n    const [name, setName] = useState('');\r\n    const [school, setSchool] = useState('');\r\n    const [kurs, setKurs] = useState('');\r\n\r\n    const myStyle = {\r\n        width: '50%',\r\n        marginLeft: '25%'\r\n    }\r\n\r\n    function addGroupToDb(e){\r\n        e.preventDefault();\r\n        let data = {\r\n            name,\r\n            school,\r\n            kurs,\r\n            temes_pass: 0,\r\n            temes2_pass: 0\r\n        }\r\n        let groupsNames = [];\r\n        props.groups.map(group => groupsNames.push(group.name))\r\n        console.log(data)\r\n        if(name !== '' && school !=='' && kurs !== '' && groupsNames.indexOf(name) === -1){\r\n            db.collection(\"Groups\").doc().set(data)\r\n            setName('');\r\n            setSchool('');\r\n            setKurs('');\r\n            props.refresh()\r\n        \r\n        } else{\r\n            alert('Група з такою назвою вже існує!')\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <Accordion>\r\n                {props.schools.map( (school, index) => \r\n                    <Card key={index}>\r\n                        <Accordion.Toggle as={Card.Header} eventKey={index.toString()}>\r\n                            {school.name}\r\n                        </Accordion.Toggle>\r\n\r\n                        <Accordion.Collapse eventKey={index.toString()}>\r\n                            <Card.Body>\r\n                                <h3>Існуючі групи</h3>\r\n                                {props.groups.map( (group, index)=>\r\n                                    group.school === school.name ? <span key={index}>&nbsp;&nbsp;{group.name} </span> : null\r\n                                )}\r\n                                <Form style={myStyle} onSubmit={e=>addGroupToDb(e)}>\r\n                                    <Form.Group controlId=\"formGroupNewGroup1\">\r\n                                        <Form.Label>Назва гурпи</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"text\" \r\n                                            placeholder=\"SL-106 / SL-201\"\r\n                                            value={name}\r\n                                            onChange={e=>setName(e.target.value)} />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                                        <Form.Label>Школа (вибір)</Form.Label>\r\n                                        <Form.Control as=\"select\" onChange={e=>setSchool(e.target.value)}>\r\n                                            <option></option>\r\n                                            {props.schools.map((school,idx)=>\r\n                                                <option key={idx}>{school.name}</option>\r\n                                            )}\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                                        <Form.Label>Курс (вибір)</Form.Label>\r\n                                        <Form.Control as=\"select\" onChange={e=>setKurs(e.target.value)}>\r\n                                            <option></option>\r\n                                            <option>1</option>\r\n                                            <option>2</option>\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n\r\n                                    <Button variant=\"primary\" type=\"submit\">\r\n                                        Додати\r\n                                    </Button>\r\n                                </Form>\r\n                            </Card.Body>\r\n                        </Accordion.Collapse>\r\n                    </Card>\r\n                )}\r\n                \r\n            </Accordion>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { db } from '../firebase';\r\n\r\nexport default function AddStudent(props) {\r\n\r\n    const [name, setName] = useState('');\r\n\r\n    const myStyle = {\r\n        width: '50%',\r\n        marginLeft: '25%'\r\n    }\r\n\r\n    function addSchoolToDb(e){\r\n        e.preventDefault();\r\n        let data = {\r\n            name\r\n        }\r\n        let schoolsNames = [];\r\n        props.schools.map(school => schoolsNames.push(school.name))\r\n        if(name !== '' && schoolsNames.indexOf(name) === -1){\r\n            db.collection(\"Schools\").doc().set(data)\r\n            setName('');\r\n        } else{\r\n            alert('Школа з такою назвою вже існує!')\r\n        }\r\n        props.refresh()\r\n    }\r\n    return (\r\n        <div>\r\n            <Form style={myStyle} onSubmit={e=>addSchoolToDb(e)}>\r\n                <Form.Group controlId=\"formGroupText\">\r\n                    <Form.Label>Назва школи</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Надія / Сихів / ...\" \r\n                        value={name}\r\n                        onChange={e=>setName(e.target.value)}/>\r\n                </Form.Group>\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                    Додати\r\n                </Button>\r\n            </Form>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport AddStudent from './AddStudent';\r\nimport AddGroup from './AddGroup';\r\nimport AddSchool from './AddSchool';\r\n\r\nexport default function AdminAdd(props) {\r\n    \r\n    const myStyle2 = {\r\n        width: '70%',\r\n        marginLeft: '15%'\r\n    }\r\n    if( props.schools !== [] && props.groups !== [] && props.students !== [] ){\r\n\r\n    return (\r\n        <div>\r\n            <h1 align=\"center\">Додати школу</h1>\r\n            \r\n            <AddSchool schools={props.schools} refresh={props.refresh}/>\r\n\r\n            <h1 align=\"center\">Додати групу</h1>\r\n            <div style={myStyle2}>\r\n                <AddGroup schools={props.schools} groups={props.groups} refresh={props.refresh}/>\r\n            </div>\r\n\r\n            <h1 align=\"center\">Додати учня</h1>\r\n            <div style={myStyle2}>\r\n                <AddStudent groups={props.groups} refresh={props.refresh}/>\r\n            </div>\r\n        </div>\r\n    )\r\n    }\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Table, Button } from 'react-bootstrap';\r\nimport { db } from '../firebase';\r\n\r\n\r\nimport AdminAdd from './AdminAdd';\r\n\r\nexport default function Admin() {\r\n\r\n    const myStatus = useSelector(state => state.status);\r\n\r\n    const [schools, setSchools] = useState([]);\r\n    const [groups, setGroups] = useState([]);\r\n    const [students, setStudents] = useState([]);\r\n\r\n    const [reloadData, setReloadData] = useState(false);\r\n\r\n    const list = {\r\n        width: '80%',\r\n        marginLeft: '10%'\r\n    }\r\n\r\n    useEffect(()=>{\r\n        db.collection(\"Schools\")\r\n        .get()\r\n        .then( snapsot => {\r\n            const data = snapsot.docs.map(doc => ({\r\n                id: doc.id,\r\n                ...doc.data()\r\n            }))\r\n            setSchools(data)\r\n        })\r\n        .catch( error => {\r\n            console.log(error)\r\n        });\r\n        \r\n        db.collection(\"Groups\")\r\n        .get()\r\n        .then( snapsot => {\r\n            const data = snapsot.docs.map(doc => ({\r\n                id: doc.id,\r\n                ...doc.data()\r\n            }))\r\n            data.sort((a,b) =>{ \r\n                if( a.school.toUpperCase() > b.school.toUpperCase() ){\r\n                    return 1\r\n                } else {\r\n                    return -1\r\n                }\r\n            })\r\n           \r\n            setGroups(data)\r\n        })\r\n        .catch( error => {\r\n            console.log(error)\r\n        });\r\n\r\n        \r\n        db.collection(\"Students\")\r\n        .get()\r\n        .then( snapsot => {\r\n            const data = snapsot.docs.map(doc => ({\r\n                id: doc.id,\r\n                ...doc.data()\r\n            }))\r\n            setStudents(data)\r\n        })\r\n        .catch( error => {\r\n            console.log(error)\r\n        });\r\n        console.log('refreshed')\r\n    },[reloadData])\r\n\r\n    function refresh(){\r\n        setReloadData(!reloadData)\r\n    }\r\n    function delStudent(id){\r\n        console.log(id)\r\n        db.collection('Students').doc(id).delete()\r\n        .then(() => {\r\n            console.log(\"Student successfully deleted!\");\r\n        }).catch( err => {\r\n            console.error(\"Error removing student: \", err);\r\n        });   \r\n\r\n        db.collection(\"Students\")\r\n        .get()\r\n        .then( snapsot => {\r\n            const data = snapsot.docs.map(doc => ({\r\n                id: doc.id,\r\n                ...doc.data()\r\n            }))\r\n            setStudents(data)\r\n        })\r\n        .catch( error => {\r\n            console.log(error)\r\n        });\r\n    }\r\n\r\n    let num = 1;\r\n    let groupN = '';\r\n    const drawStudnets = (studGroup, groupName, idx, name, phone, id) => {\r\n        if(groupN !== groupName){\r\n            groupN = groupName;\r\n           num = 1\r\n        }\r\n        if(studGroup === groupName){\r\n         return (\r\n            <tr key={idx}>\r\n                <td>{num++}</td>\r\n                <td>{name}</td>\r\n                <td>{phone}</td>\r\n                <td><Button variant=\"danger\" onClick={() => delStudent(id)}>Видалити</Button></td>\r\n            </tr> \r\n            )\r\n        }\r\n        \r\n    }\r\n\r\n    if(myStatus !== 'Admin') return <Redirect to='#/home'/>\r\n    return (\r\n        <div>\r\n            <AdminAdd schools={schools} groups={groups} students={students} refresh={() => refresh()}/>\r\n\r\n            <h1 align=\"center\">Загальна статистика</h1>\r\n            <div style={list}>\r\n            { schools.length > 0 ? schools.map((school, idx) => (\r\n                <div key={idx}>\r\n                    <h1 align=\"center\">{school.name}</h1>\r\n\r\n                    {groups.map((group, index)=>(\r\n                        group.school === school.name ?\r\n                        <div key={index}>\r\n                            <h1 align=\"center\">{group.name}</h1>\r\n                            <Table striped bordered hover>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>#</th>\r\n                                        <th>Ім'я</th>\r\n                                        <th>Номер телефону</th>\r\n                                        <th>Видалити учня</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {students.map((student, idx) => \r\n                                        drawStudnets(student.group, group.name, idx, student.name, student.phone, student.id)   \r\n                                    )}\r\n                                </tbody>\r\n                            </Table>\r\n                        </div>\r\n                        : null\r\n                    ))}\r\n                    \r\n                </div>\r\n            )): null}\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport ReactWOW from 'react-wow';\r\nimport program from '../images/program.jpg';\r\nimport '../styles/Landing.scss';\r\n\r\nexport default function Landing() {\r\n    return (\r\n        <div className='landing'>\r\n            <div className='Block0'>\r\n                <h1 className='logo'>Study Link</h1>\r\n                <br/><br/>\r\n                <h2>Курси програмування</h2>\r\n            </div>\r\n            <div className='Block1'>\r\n                <ReactWOW animation='bounceInLeft' duration=\"2s\">\r\n                    <div className='w-50 float_left bg1'>\r\n                        Умови: <br/>\r\n                        Для дітей 11-14 років. <br/>\r\n                        Заняття у компютерних класах з проектором. <br/>\r\n                        Заняття відбуваються раз у тиждень. <br/>\r\n                        Заняття триває - 1 годину 50 хвилин.\r\n                    </div>\r\n                </ReactWOW>\r\n                <ReactWOW animation='bounceInRight' duration=\"2s\">\r\n                    <div className='w-50 float_left bg2'>\r\n                        Навчимо: <br/>\r\n                        Створювати web-сайти. <br/>\r\n                        Мов: <a href=\"https://uk.wikipedia.org/wiki/HTML\"><span className='html'>html</span></a>\r\n                        , <a href=\"https://uk.wikipedia.org/wiki/CSS\"><span className='css'>css</span></a>\r\n                            та <a href=\"https://uk.wikipedia.org/wiki/JavaScript\"><span className='js'>javascript</span></a>. <br/>\r\n                        Користуватись <a href=\"https://uk.wikipedia.org/wiki/Git\"><span className='git'>git</span></a>. <br/>\r\n                        Користуватись додатковами програмами та сайтами для створення web-сторінок\r\n                    </div>\r\n                </ReactWOW>\r\n                <ReactWOW animation='jackInTheBox' duration=\"2s\">\r\n                    <div className='w-100 float_left bg3'>Перше заняття безкоштовно!</div>\r\n                </ReactWOW>\r\n                <ReactWOW animation='rotateInUpLeft' duration=\"1s\">\r\n                    <div className='w-100 float_left bg4'>\r\n                        <h1>По закінченю курсу ви отримуєте:</h1>\r\n                        <h3>Знання необхідні у будь-якій сфері web-розробки</h3>\r\n                        <h3>Роботи збережені у відкритому ресурсі</h3>\r\n                        <h3>Курсову роботу яку не соромно розмістити у резюме</h3>\r\n                        <h3>Сертифікат у разі успішного завершення курсу</h3>\r\n                    </div>\r\n                </ReactWOW>\r\n            </div>\r\n            \r\n            <img src={program} alt='program' width='70%' className='program'/>\r\n\r\n            <div className=\"footer\">\r\n                <div className=\"footer-left\">StudyLink</div>\r\n                <div className=\"footer-center\">Lviv 2020</div>\r\n                <div className=\"footer-right\">kosaniakm@gmail.com</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Accordion, Card } from 'react-bootstrap';\r\n\r\nexport default function TemesForKurs(props) {\r\n    return (\r\n        <Accordion defaultActiveKey=\"0\" align='left'>\r\n            {\r\n                props.temes.map((item, idx)=>(\r\n                    <Card key={item.tema}>\r\n                        <Accordion.Toggle as={Card.Header} eventKey={item.tema}>\r\n                            <b>{idx+1} {item.tema}</b>\r\n                        </Accordion.Toggle>\r\n                        <Accordion.Collapse eventKey={item.tema}>\r\n                        <Card.Body>\r\n                            {(item.task[0] !== \"\") ? \r\n                            <div>\r\n                                <h5 align=\"left\">Завдання</h5>\r\n                                <ol>\r\n                                {item.task.map(item =>(\r\n                                    <li align='left' key={item}><a href={'https://kosaniakmarianone.github.io/' + item} target='blank'>Завдання</a></li>\r\n                                ))}\r\n                                </ol>\r\n                            </div>: ''\r\n                            }\r\n                            {(item.materials !== \"\") ? <h5 align='left'><a href={item.materials} target='blank'>Матеріали</a></h5> : ''}\r\n                            {(item.video !== \"\") ? <h5 align='left'><a href={item.video} target='blank'>Відео</a></h5> : ''}\r\n                            {(item.video === \"\" && item.materials === \"\" && item.task[0] === \"\") ? 'Тема не відкрита, або розглядається лише на занятті': ''}\r\n                        </Card.Body>\r\n                        </Accordion.Collapse>\r\n                    </Card>\r\n                ))\r\n            }\r\n        </Accordion>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Tab, Tabs } from 'react-bootstrap';\r\nimport { db } from '../firebase';\r\nimport TemesForKurs from './TemesForKurs';\r\nexport default function Temes() {\r\n\r\n    const isLogged = useSelector(state => state.isLogged);\r\n    const user = useSelector(state => state.saveStudentInfo);\r\n    const status = useSelector(state => state.status);\r\n\r\n    const allState = useSelector(state => state);\r\n\r\n    const [temes, setTemes] = useState([]);\r\n    const [temesJS, setTemesJS] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        if(status === 'Student'){\r\n            db.collection(\"Groups\")\r\n            .where('name', '==', user.group)\r\n            .get()\r\n            .then( snapsot => {\r\n                const data = snapsot.docs.map(doc => ({\r\n                    id: doc.id,\r\n                    ...doc.data()\r\n                }))\r\n                \r\n                    db.collection(\"Temes\")\r\n                    .get()\r\n                    .then( snapsot => {\r\n                        const alltemes = snapsot.docs.map(doc => ({\r\n                            id: doc.id,\r\n                            ...doc.data()\r\n                        }))\r\n                        alltemes.sort((a, b) => a.id - b.id);\r\n                        const newTemes = alltemes.slice(0, data[0].temes_pass);\r\n                        setTemes(newTemes)\r\n                    })\r\n                    .catch( error => {\r\n                        console.log(error)\r\n                    });\r\n\r\n                    db.collection(\"Temes2\")\r\n                    .get()\r\n                    .then( snapsot => {\r\n                        const alltemesJS = snapsot.docs.map(doc => ({\r\n                            id: doc.id,\r\n                            ...doc.data()\r\n                        }))\r\n                        alltemesJS.sort((a, b) => a.id - b.id);\r\n                        setTemesJS(alltemesJS)\r\n                    })\r\n                    .catch( error => {\r\n                        console.log(error)\r\n                    });\r\n            })\r\n            .catch( error => {\r\n                console.log(error)\r\n            });\r\n        }\r\n        else if( status === 'Teacher' || status === 'Admin'){\r\n            db.collection(\"Temes\")\r\n            .get()\r\n            .then( snapsot => {\r\n                const alltemes = snapsot.docs.map(doc => ({\r\n                    id: doc.id,\r\n                    ...doc.data()\r\n                }))\r\n                alltemes.sort((a, b) => a.id - b.id);\r\n                setTemes(alltemes)\r\n            })\r\n            .catch( error => {\r\n                console.log(error)\r\n            });\r\n\r\n            db.collection(\"Temes2\")\r\n            .get()\r\n            .then( snapsot => {\r\n                const alltemesJS = snapsot.docs.map(doc => ({\r\n                    id: doc.id,\r\n                    ...doc.data()\r\n                }))\r\n                alltemesJS.sort((a, b) => a.id - b.id);\r\n                setTemesJS(alltemesJS)\r\n            })\r\n            .catch( error => {\r\n                console.log(error)\r\n            });\r\n        } \r\n    },[status, user.group])\r\n\r\n    return (\r\n        <div>\r\n            {console.log(allState)}\r\n\r\n            {isLogged ? \r\n\r\n            <>\r\n                <h1 align='center'>Теми відкриті для {user.name} </h1>\r\n                <div style={{width: '80%', marginLeft: '10%'}}>\r\n                <Tabs defaultActiveKey=\"HTML/CSS\" id=\"uncontrolled-tab-example\">\r\n                    <Tab eventKey=\"HTML/CSS\" title=\"HTML/CSS\">\r\n                        <TemesForKurs temes={temes}/>\r\n                    </Tab>\r\n                    <Tab eventKey=\"JavaScript\" title=\"JavaScript\">\r\n                        {user.kurs === '2'\r\n                            ? \r\n                            <TemesForKurs temes={temesJS}/> \r\n                            :\r\n                            <h1 align='center'>Цей курс для Вас не відкритий</h1>}\r\n                    </Tab>\r\n                </Tabs>\r\n                <br/><br/><br/>\r\n                <h5>Доступ до тем відкривається поступово. Виконані завдання зберігайте на своєму акаунті GitHub.\r\n                    Якщо у вас проблеми з досупом до тем або ви помітите якусь помилку на сайті прохання сказати про це вчителю.\r\n                </h5>\r\n                <br/><br/><br/>\r\n                </div>\r\n            </>\r\n            :\r\n            <h1>Увійдіть щоб побачити теми</h1>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { db } from '../firebase';\r\n\r\nexport default function AddStudent(props) {\r\n    \r\n    const admin = useSelector(state => state.admin);\r\n\r\n    const [num, setNum] = useState('');\r\n    const [tema, setTema] = useState('');\r\n    const [video, setVideo] = useState('');\r\n    const [tasks, setTasks] = useState(0);\r\n    const [newTasks, setNewTasks] = useState([]);\r\n    const [materials, setMaterials] = useState('');\r\n\r\n    const myStyle = {\r\n        width: '50%',\r\n        marginLeft: '25%'\r\n    }\r\n\r\n    function addTheme2ToDb(e){\r\n        e.preventDefault();\r\n        let data = {\r\n            tema,\r\n            video,\r\n            tasks,\r\n            materials\r\n        }\r\n        if( tema !== '' && video !== '' && tasks > 0 ){\r\n            let allNewTask = [];\r\n            for(let i = 1; i <= tasks; i++){\r\n                allNewTask.push(`js/t${num}/z${i}`);\r\n            }\r\n            data = {\r\n                tema,\r\n                video,\r\n                task: allNewTask,\r\n                materials\r\n            }\r\n            console.log(data)\r\n            db.collection(\"Temes2\").doc(num).set(data)\r\n\r\n            setNum('');\r\n            setTema('');\r\n            setVideo('');\r\n            setTasks('');\r\n            setMaterials('');\r\n        } else{\r\n            alert('Помилка додавання теми')\r\n        }\r\n    }\r\n    if(admin){\r\n    return (\r\n        <div>\r\n            \r\n            <h1 align='center'>Додати тему до курсу JavaScript</h1>\r\n            <Form style={myStyle} onSubmit={e=>addTheme2ToDb(e)}>\r\n\r\n                <Form.Group controlId=\"formGroupNum\">\r\n                    <Form.Label>Номер теми</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"1,2,3...\" \r\n                        value={num}\r\n                        onChange={e=>setNum(e.target.value)}/>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formGroupTema\">\r\n                    <Form.Label>Назва теми</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"js\" \r\n                        value={tema}\r\n                        onChange={e=>setTema(e.target.value)}/>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formGroupVideo\">\r\n                    <Form.Label>Відео</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"https://....\" \r\n                        value={video}\r\n                        onChange={e=>setVideo(e.target.value)}/>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formGroupVideo\">\r\n                    <Form.Label>Матеріали</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"https://....\" \r\n                        value={materials}\r\n                        onChange={e=>setMaterials(e.target.value)}/>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formGroupVideo\">\r\n                    <Form.Label>Кількість завдань</Form.Label>\r\n                    <Form.Control as=\"select\" onChange={e=>setTasks(e.target.value)}>\r\n                        <option></option>\r\n                        <option>1</option>\r\n                        <option>2</option>\r\n                        <option>3</option>\r\n                        <option>4</option>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                \r\n                <Button variant=\"primary\" type=\"submit\">\r\n                    Додати\r\n                </Button>\r\n            </Form>\r\n            \r\n        </div>\r\n    )\r\n    }\r\n}\r\n","import React from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\nimport Home from './components/Home';\nimport Login from './components/Login';\nimport Menu from './components/Menu';\nimport Admin from './components/Admin';\nimport Landing from './components/Landing';\nimport Temes from './components/Temes';\nimport AddTheme from './components/AddTheme';\n\nfunction App() {\n  return (\n    <HashRouter basename='/'>\n      <Route path='/' component={Menu}/>\n      <Route exact path='/' component={Landing}/>\n      <Route exact path='/Temes' component={Temes}/>\n      <Route exact path='/AddTheme' component={AddTheme}/>\n      <Route exact path='/Home' component={Home}/>\n      <Route exact path='/Admin' component={Admin}/>\n      <Route exact path='/Login' component={Login}/>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","const isLogged = (state = false, action) => {\r\n    switch(action.type){\r\n        case 'SIGN_IN': \r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default isLogged;","const saveUserInStore = (state = [], action) => {\r\n    switch(action.type){\r\n        case 'SAVE_USER_IN_STORE': \r\n            state =  action.payload\r\n            return state\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default saveUserInStore;","const admin = (state = false, action) => {\r\n    switch(action.type){\r\n        case 'ADMIN_SIGN_IN': \r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default admin;","const saveStudentInfo = (state = [], action) => {\r\n    switch(action.type){\r\n        case 'SAVE_STUDENT_INFO_IN_STORE': \r\n            state =  action.payload\r\n            return state\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default saveStudentInfo;","const status = (state = 'Guest', action) => {\r\n    switch(action.type){\r\n        case 'SET_USER_STATUS':\r\n            state = action.payload;\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default status;","\r\nimport { combineReducers } from 'redux';\r\n\r\nimport isLogged from './isLogged';\r\nimport saveUserInStore from './saveUserInStore';\r\nimport admin from './admin';\r\nimport saveStudentInfo from './saveStudentInfo';\r\nimport status from './status'\r\n\r\n\r\nconst allReducers = combineReducers({\r\n    isLogged,\r\n    saveUserInStore,\r\n    admin,\r\n    saveStudentInfo,\r\n    status\r\n})\r\n\r\nexport default allReducers;","import { createStore } from 'redux';\r\nimport allReducers from '../reducers/index';\r\n\r\nfunction saveToLocalStorage(state){\r\n    try{\r\n        const serializedState = JSON.stringify(state);\r\n        localStorage.setItem('state', serializedState);\r\n    } catch(e){\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nfunction loadFromLocalStorage(){\r\n    try{\r\n        const serializedState = localStorage.getItem('state');\r\n        if(serializedState === null)return undefined\r\n        return JSON.parse(serializedState)\r\n    } catch(e){\r\n        console.log(e)\r\n        return undefined\r\n    }  \r\n}\r\n\r\nconst persistedState = loadFromLocalStorage()\r\n\r\nconst store = createStore(\r\n    allReducers,\r\n    persistedState\r\n);\r\n\r\nstore.subscribe(()=>saveToLocalStorage(store.getState()))\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './config/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.Fragment>\n      <App />\n    </React.Fragment>\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}